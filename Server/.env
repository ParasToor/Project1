PORT = 8000
JWT_KEY = paras
DB_HOST=localhost
DB_USER=root
DB_PASSWORD=root
DB_NAME =test
DB_DIALECT=mysql


const { Role } = require('../database/models');

exports.createRoleHandler = async (req, res) => {
  try {
    const data = req.body.data;

    console.log("Error from backend - ", data);

    if (!data.name) {
      return res.status(401).json({
        success: "false",
        message: "Name is missing",
        errors: [
          {
            type: "field",
            value: "",
            msg: "Name of the role is required",
            path: "name",
            location: "query",
          },
        ],
      });
    }

    if (!data.permissions) {
      return res.status(401).json({
        success: "false",
        message: "Permissions is missing",
        errors: [
          {
            type: "field",
            value: "",
            msg: "Permissions to assign are required",
            path: "permissions",
            location: "query",
          },
        ],
      });
    }

    const arrayOfPerm = data.permissions;

    const findRole = await Role.findOne({ where: { name: data.name } });

    console.log("Role FINDING - ", findRole);

    if (findRole) {
      return res.status(401).json({
        success: "false",
        message: "This Role already exists",
        errors: [
          {
            type: "field",
            value: "",
            msg: "Role name already exists.",
            path: "name",
            location: "query",
          },
        ],
      });
    }

    const newRole = await Role.create({
      name: data.name,
      permissions: arrayOfPerm.map((perm) => perm.value),
    });

    console.log("Result from backend data entry creation - ", newRole);

    res.status(200).json({
      success: true,
    });
  } catch (err) {
    res.status(500).json({
      success: false,
      message: "Error inside create Role Handler",
      error: err.message,
    });
  }
};
